{"ast":null,"code":"var _jsxFileName = \"E:\\\\EnglishWordCards\\\\EnglishWordCards7\\\\english-flashcards\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CardContainer from './components/CardContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-background-light dark:bg-background-dark  transition-colors duration-200\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4 md:p-6 lg:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl md:text-3xl lg:text-4xl font-bold mb-6 text-center  text-primary-light dark:text-primary-dark\",\n        children: \"English Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n        darkMode: darkMode,\n        onDarkModeToggle: () => setDarkMode(!darkMode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CardContainer","jsxDEV","_jsxDEV","App","_s","darkMode","setDarkMode","document","documentElement","classList","add","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDarkModeToggle","_c","$RefreshReg$"],"sources":["E:/EnglishWordCards/EnglishWordCards7/english-flashcards/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardContainer from './components/CardContainer';\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n\n  return (\n    <div className=\"min-h-screen bg-background-light dark:bg-background-dark \n      transition-colors duration-200\">\n      <div className=\"max-w-4xl mx-auto p-4 md:p-6 lg:p-8\">\n        <h1 className=\"text-2xl md:text-3xl lg:text-4xl font-bold mb-6 text-center \n          text-primary-light dark:text-primary-dark\">\n          English Flashcards\n        </h1>\n        <CardContainer darkMode={darkMode} onDarkModeToggle={() => setDarkMode(!darkMode)} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,EAAE;MACZE,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKU,SAAS,EAAC,0FACkB;IAAAC,QAAA,eAC/BX,OAAA;MAAKU,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAClDX,OAAA;QAAIU,SAAS,EAAC,wGAC8B;QAAAC,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLf,OAAA,CAACF,aAAa;QAACK,QAAQ,EAAEA,QAAS;QAACa,gBAAgB,EAAEA,CAAA,KAAMZ,WAAW,CAAC,CAACD,QAAQ;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAvBID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}