{"ast":null,"code":"var _jsxFileName = \"E:\\\\EnglishWordCards\\\\EnglishWordCards7\\\\english-flashcards\\\\src\\\\components\\\\CardContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport Card from './Card';\nimport Navigation from './Navigation';\nimport LevelFilter from './LevelFilter';\nimport { useSupabase } from '../hooks/useSupabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = ({\n  darkMode,\n  onDarkModeToggle\n}) => {\n  _s();\n  const [currentCard, setCurrentCard] = useState(0);\n  const [selectedLevels, setSelectedLevels] = useState(['A1']);\n  const {\n    cards,\n    loading,\n    error\n  } = useSupabase();\n\n  // Debug logs\n  console.log('Selected Levels:', selectedLevels);\n  console.log('All Cards:', cards);\n\n  // Kartları karıştırmak için yardımcı fonksiyon\n  const shuffleArray = array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Filtrelenmiş ve karıştırılmış kartları hesapla\n  const filteredCards = useMemo(() => {\n    const filtered = cards.filter(card => selectedLevels.includes(card.level));\n    console.log('Filtered Cards:', filtered); // Filtrelenmiş kartları görelim\n    return shuffleArray(filtered);\n  }, [cards, selectedLevels]);\n  const handleNext = () => {\n    if (currentCard < filteredCards.length - 1) {\n      setCurrentCard(prev => prev + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentCard > 0) {\n      setCurrentCard(prev => prev - 1);\n    }\n  };\n  const handleLevelChange = level => {\n    setSelectedLevels(prev => {\n      let newLevels;\n      if (prev.includes(level)) {\n        if (prev.length === 1) return prev;\n        newLevels = prev.filter(l => l !== level);\n      } else {\n        newLevels = [...prev, level];\n      }\n      setCurrentCard(0); // Seviye değiştiğinde ilk karta dön\n      return newLevels;\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-red-500 text-center\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, this);\n  if (!filteredCards.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: \"No cards found for selected levels\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 37\n  }, this);\n  const card = filteredCards[currentCard];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full px-2 sm:px-4 md:px-6\",\n    children: [/*#__PURE__*/_jsxDEV(LevelFilter, {\n      selectedLevels: selectedLevels,\n      onLevelChange: handleLevelChange,\n      darkMode: darkMode,\n      onDarkModeToggle: onDarkModeToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      word: card.word,\n      level: card.level,\n      pronunciation: card.pronunciation,\n      meaning: card.meaning,\n      example: card.example_sentence,\n      example_tr: card.example_sentence_tr,\n      cardNumber: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      onNext: handleNext,\n      onPrevious: handlePrevious,\n      disableNext: currentCard === filteredCards.length - 1,\n      disablePrevious: currentCard === 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4 text-sm md:text-base text-gray-500\",\n      children: [\"Showing card \", currentCard + 1, \" of \", filteredCards.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CardContainer, \"/6+CDoBpeLyY3VTNStDY/2G+Myw=\", false, function () {\n  return [useSupabase];\n});\n_c = CardContainer;\nexport default CardContainer;\nvar _c;\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useState","useMemo","Card","Navigation","LevelFilter","useSupabase","jsxDEV","_jsxDEV","CardContainer","darkMode","onDarkModeToggle","_s","currentCard","setCurrentCard","selectedLevels","setSelectedLevels","cards","loading","error","console","log","shuffleArray","array","shuffled","i","length","j","Math","floor","random","filteredCards","filtered","filter","card","includes","level","handleNext","prev","handlePrevious","handleLevelChange","newLevels","l","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLevelChange","word","pronunciation","meaning","example","example_sentence","example_tr","example_sentence_tr","cardNumber","onNext","onPrevious","disableNext","disablePrevious","_c","$RefreshReg$"],"sources":["E:/EnglishWordCards/EnglishWordCards7/english-flashcards/src/components/CardContainer.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Card from './Card';\nimport Navigation from './Navigation';\nimport LevelFilter from './LevelFilter';\nimport { useSupabase } from '../hooks/useSupabase';\n\nconst CardContainer = ({ darkMode, onDarkModeToggle }) => {\n  const [currentCard, setCurrentCard] = useState(0);\n  const [selectedLevels, setSelectedLevels] = useState(['A1']);\n  const { cards, loading, error } = useSupabase();\n\n  // Debug logs\n  console.log('Selected Levels:', selectedLevels);\n  console.log('All Cards:', cards);\n\n  // Kartları karıştırmak için yardımcı fonksiyon\n  const shuffleArray = (array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Filtrelenmiş ve karıştırılmış kartları hesapla\n  const filteredCards = useMemo(() => {\n    const filtered = cards.filter(card => selectedLevels.includes(card.level));\n    console.log('Filtered Cards:', filtered); // Filtrelenmiş kartları görelim\n    return shuffleArray(filtered);\n  }, [cards, selectedLevels]);\n\n  const handleNext = () => {\n    if (currentCard < filteredCards.length - 1) {\n      setCurrentCard(prev => prev + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentCard > 0) {\n      setCurrentCard(prev => prev - 1);\n    }\n  };\n\n  const handleLevelChange = (level) => {\n    setSelectedLevels(prev => {\n      let newLevels;\n      if (prev.includes(level)) {\n        if (prev.length === 1) return prev;\n        newLevels = prev.filter(l => l !== level);\n      } else {\n        newLevels = [...prev, level];\n      }\n      setCurrentCard(0); // Seviye değiştiğinde ilk karta dön\n      return newLevels;\n    });\n  };\n\n  if (loading) return <div className=\"p-4 text-center\">Loading...</div>;\n  if (error) return <div className=\"p-4 text-red-500 text-center\">Error: {error}</div>;\n  if (!filteredCards.length) return <div className=\"p-4 text-center\">No cards found for selected levels</div>;\n\n  const card = filteredCards[currentCard];\n\n  return (\n    <div className=\"w-full px-2 sm:px-4 md:px-6\">\n      <LevelFilter \n        selectedLevels={selectedLevels} \n        onLevelChange={handleLevelChange}\n        darkMode={darkMode}\n        onDarkModeToggle={onDarkModeToggle}\n      />\n      <Card\n        word={card.word}\n        level={card.level}\n        pronunciation={card.pronunciation}\n        meaning={card.meaning}\n        example={card.example_sentence}\n        example_tr={card.example_sentence_tr}\n        cardNumber=' '\n      />\n      <Navigation \n        onNext={handleNext} \n        onPrevious={handlePrevious}\n        disableNext={currentCard === filteredCards.length - 1}\n        disablePrevious={currentCard === 0}\n      />\n      <div className=\"text-center mt-4 text-sm md:text-base text-gray-500\">\n        Showing card {currentCard + 1} of {filteredCards.length}\n      </div>\n    </div>\n  );\n};\n\nexport default CardContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}