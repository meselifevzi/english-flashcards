{"ast":null,"code":"var _jsxFileName = \"E:\\\\EnglishWordCards\\\\EnglishWordCards7\\\\english-flashcards\\\\src\\\\components\\\\CardContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport Card from './Card';\nimport Navigation from './Navigation';\nimport LevelFilter from './LevelFilter';\nimport { useSupabase } from '../hooks/useSupabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = () => {\n  _s();\n  const [currentCard, setCurrentCard] = useState(0);\n  const [selectedLevels, setSelectedLevels] = useState(['A1']); // Varsayılan olarak A1 seçili\n  const {\n    cards,\n    loading,\n    error\n  } = useSupabase();\n\n  // Filtrelenmiş kartları hesapla\n  const filteredCards = useMemo(() => {\n    return cards.filter(card => selectedLevels.includes(card.level));\n  }, [cards, selectedLevels]);\n  const handleNext = () => {\n    if (currentCard < filteredCards.length - 1) {\n      setCurrentCard(prev => prev + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentCard > 0) {\n      setCurrentCard(prev => prev - 1);\n    }\n  };\n  const handleLevelChange = level => {\n    setSelectedLevels(prev => {\n      if (prev.includes(level)) {\n        // En az bir level seçili olmalı\n        if (prev.length === 1) return prev;\n        return prev.filter(l => l !== level);\n      }\n      return [...prev, level];\n    });\n    setCurrentCard(0); // Filtre değiştiğinde ilk karta dön\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-red-500 text-center\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  if (!filteredCards.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: \"No cards found for selected levels\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 37\n  }, this);\n  const card = filteredCards[currentCard];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(LevelFilter, {\n      selectedLevels: selectedLevels,\n      onLevelChange: handleLevelChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      word: card.word,\n      level: card.level,\n      pronunciation: card.pronunciation,\n      meaning: card.meaning,\n      example: card.example_sentence,\n      example_tr: card.example_sentence_tr,\n      cardNumber: card.card_number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      onNext: handleNext,\n      onPrevious: handlePrevious,\n      disableNext: currentCard === filteredCards.length - 1,\n      disablePrevious: currentCard === 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4 text-sm text-gray-500\",\n      children: [\"Showing card \", currentCard + 1, \" of \", filteredCards.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CardContainer, \"/6+CDoBpeLyY3VTNStDY/2G+Myw=\", false, function () {\n  return [useSupabase];\n});\n_c = CardContainer;\nexport default CardContainer;\nvar _c;\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useState","useMemo","Card","Navigation","LevelFilter","useSupabase","jsxDEV","_jsxDEV","CardContainer","_s","currentCard","setCurrentCard","selectedLevels","setSelectedLevels","cards","loading","error","filteredCards","filter","card","includes","level","handleNext","length","prev","handlePrevious","handleLevelChange","l","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLevelChange","word","pronunciation","meaning","example","example_sentence","example_tr","example_sentence_tr","cardNumber","card_number","onNext","onPrevious","disableNext","disablePrevious","_c","$RefreshReg$"],"sources":["E:/EnglishWordCards/EnglishWordCards7/english-flashcards/src/components/CardContainer.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Card from './Card';\nimport Navigation from './Navigation';\nimport LevelFilter from './LevelFilter';\nimport { useSupabase } from '../hooks/useSupabase';\n\nconst CardContainer = () => {\n  const [currentCard, setCurrentCard] = useState(0);\n  const [selectedLevels, setSelectedLevels] = useState(['A1']); // Varsayılan olarak A1 seçili\n  const { cards, loading, error } = useSupabase();\n\n  // Filtrelenmiş kartları hesapla\n  const filteredCards = useMemo(() => {\n    return cards.filter(card => selectedLevels.includes(card.level));\n  }, [cards, selectedLevels]);\n\n  const handleNext = () => {\n    if (currentCard < filteredCards.length - 1) {\n      setCurrentCard(prev => prev + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentCard > 0) {\n      setCurrentCard(prev => prev - 1);\n    }\n  };\n\n  const handleLevelChange = (level) => {\n    setSelectedLevels(prev => {\n      if (prev.includes(level)) {\n        // En az bir level seçili olmalı\n        if (prev.length === 1) return prev;\n        return prev.filter(l => l !== level);\n      }\n      return [...prev, level];\n    });\n    setCurrentCard(0); // Filtre değiştiğinde ilk karta dön\n  };\n\n  if (loading) return <div className=\"p-4 text-center\">Loading...</div>;\n  if (error) return <div className=\"p-4 text-red-500 text-center\">Error: {error}</div>;\n  if (!filteredCards.length) return <div className=\"p-4 text-center\">No cards found for selected levels</div>;\n\n  const card = filteredCards[currentCard];\n\n  return (\n    <div className=\"p-4\">\n      <LevelFilter \n        selectedLevels={selectedLevels} \n        onLevelChange={handleLevelChange}\n      />\n      <Card\n        word={card.word}\n        level={card.level}\n        pronunciation={card.pronunciation}\n        meaning={card.meaning}\n        example={card.example_sentence}\n        example_tr={card.example_sentence_tr}\n        cardNumber={card.card_number}\n      />\n      <Navigation \n        onNext={handleNext} \n        onPrevious={handlePrevious}\n        disableNext={currentCard === filteredCards.length - 1}\n        disablePrevious={currentCard === 0}\n      />\n      <div className=\"text-center mt-4 text-sm text-gray-500\">\n        Showing card {currentCard + 1} of {filteredCards.length}\n      </div>\n    </div>\n  );\n};\n\nexport default CardContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}